name: deploy

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-python@v4
        with:
          python-version: 3.11

      # ✅ Setup SSH Key
      - name: Setup SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SERVER_SSH_KEY }}" | tr -d '\r' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          eval "$(ssh-agent -s)"
          ssh-add ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts
      # ✅ Debug SSH Connection
      - name: Debug SSH
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no -o ServerAliveInterval=60 -vvv ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }} "echo 'SSH connection successful'"
      # ✅ Deploy to Server
      - name: Deploy to Server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          username: ${{ secrets.SERVER_USERNAME }}
          script: |
            echo "Deployment starting..."
            
            # ✅ Set project directory
            PROJECT_DIR="/var/www/fastapi-book-project"
            
            # ✅ Clone repository if not exists
            if [ ! -d "$PROJECT_DIR" ]; then
              echo "Project directory not found. Cloning repository..."
              git clone https://github.com/0x00whitecode/fastapi-book-project.git $PROJECT_DIR
            fi
            
            # ✅ Navigate to project directory
            cd $PROJECT_DIR || { echo "Failed to cd into project directory"; exit 1; }
            
            # ✅ Pull latest changes
            git fetch --all
            git reset --hard origin/main
            git pull origin main
            
            # ✅ Setup virtual environment & install dependencies
            python3 -m venv venv || exit 1
            source venv/bin/activate || exit 1
            python -m pip install --upgrade pip || exit 1
            pip install -r requirements.txt || exit 1
            
            # ✅ Stop existing application if running
            echo "Stopping existing application..."
            killall uvicorn || echo "No existing process found"
            echo "Application stopped successfully"
            
            # ✅ Start FastAPI app
            echo "Starting application..."
            nohup uvicorn main:app --host 0.0.0.0 --port 8000 > app.log 2>&1 &
            echo "Application started successfully"
            
            # ✅ Configure Nginx
            echo 'server {
                listen 80;
                server_name localhost;
                
                location / {
                    proxy_pass http://127.0.0.1:8000;
                    proxy_set_header Host $host;
                    proxy_set_header X-Real-IP $remote_addr;
                    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                    proxy_set_header X-Forwarded-Proto $scheme;
                }
                location /static/ {
                    alias /var/www/fastapi-book-project/static/;
                }
            }' | sudo tee /etc/nginx/sites-available/fastapi
            
            # ✅ Enable Nginx configuration
            sudo ln -sf /etc/nginx/sites-available/fastapi /etc/nginx/sites-enabled/
            
            # ✅ Test and restart Nginx
            sudo nginx -t && sudo systemctl restart nginx
            
            echo "Nginx configuration updated and restarted!"
