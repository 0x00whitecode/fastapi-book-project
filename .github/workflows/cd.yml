name: deploy

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v4
        with:
          python-version: 3.11

      # ✅ Setup SSH Key
      - name: Setup SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SERVER_SSH_KEY }}" | tr -d '\r' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          eval "$(ssh-agent -s)"
          ssh-add ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts

      # ✅ Debug SSH Connection
      - name: Debug SSH
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no -vvv ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }} "echo 'SSH connection successful'"

      # ✅ Ensure Correct SSH Permissions on the Server
      - name: Ensure Correct SSH Permissions on Server
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }} << 'EOF'
            mkdir -p ~/.ssh
            chmod 700 ~/.ssh
            touch ~/.ssh/authorized_keys
            chmod 600 ~/.ssh/authorized_keys
          EOF

      # ✅ Deploy to Server (Fixing Missing Directory Issue)
      - name: Deploy to Server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          username: ${{ secrets.SERVER_USERNAME }}
          script: |
            echo "Deployment starting..."

            # ✅ Set project directory
            PROJECT_DIR="/var/www/fastapi-book-project"

            # ✅ Check if project directory exists
            if [ ! -d "$PROJECT_DIR" ]; then
              echo "Project directory not found. Creating it..."
              sudo mkdir -p $PROJECT_DIR
              sudo chown $USER:$USER $PROJECT_DIR
            fi

            # ✅ Navigate to project directory
            cd $PROJECT_DIR || { echo "Failed to cd into project directory"; exit 1; }

            # ✅ Ensure correct SSH permissions
            chmod 700 ~/.ssh
            chmod 600 ~/.ssh/authorized_keys

            # ✅ Pull latest changes
            git fetch --all
            git reset --hard origin/main
            git pull origin main

            # ✅ Setup virtual environment & install dependencies
            python3 -m venv venv
            source venv/bin/activate
            python -m pip install --upgrade pip
            pip install -r requirements.txt

            # ✅ Stop existing app if running
            pkill -f "uvicorn" || echo "No existing process found"

            # ✅ Start FastAPI app
            nohup uvicorn main:app --host 0.0.0.0 --port 5051 --reload > app.log 2>&1 &

            echo "Deployment complete!"
